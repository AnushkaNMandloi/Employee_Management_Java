/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import static UI.CreateEmployee.isValidUsername;
import static UI.CreateEmployee.onlyDigits;
import java.awt.Image;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.text.SimpleDateFormat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Employee;
import model.EmployeeHistory;

/**
 *
 * @author anush
 */
public class ViewEmployee extends javax.swing.JPanel {

    /**
     * Creates new form ViewEmployee
     */
    Employee emp;
    EmployeeHistory history;

    public ViewEmployee(EmployeeHistory e) {
        initComponents();
        this.history = e;
        populateHistory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Level = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Team = new javax.swing.JTextField();
        Name = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Position = new javax.swing.JTextField();
        Age = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Contact = new javax.swing.JTextField();
        Gender = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Photo = new javax.swing.JTextField();
        StartDate = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        EmployeeId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEmployee = new javax.swing.JTable();
        ViewBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        UpdateBtn = new javax.swing.JButton();
        SearchField = new javax.swing.JTextField();
        SearchBtn = new javax.swing.JButton();
        imageDisplayLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();

        jLabel6.setText("Level");

        jLabel1.setText("Employee ID");

        jLabel7.setText("Team");

        jLabel2.setText("Name");

        jLabel8.setText("Position");

        jLabel3.setText("Age");

        jLabel9.setText("Contact");

        jLabel4.setText("Gender");

        jLabel10.setText("Photo");

        jLabel5.setText("Start Date");

        tableEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Employee ID", "Name ", "Age", "Gender", "Start Date", "Level", "Team", "Position", "Contact", "Email", "Photo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableEmployee);

        ViewBtn.setText("View ");
        ViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        UpdateBtn.setText("Update");
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });

        SearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchFieldActionPerformed(evt);
            }
        });

        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        jLabel11.setText("Email");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(333, 333, 333)
                .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(SearchBtn)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(Age, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(Contact, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(StartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Team, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(EmployeeId, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .addComponent(Gender)
                                    .addComponent(Level)
                                    .addComponent(Position)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Photo, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(imageDisplayLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(84, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UpdateBtn)
                .addGap(198, 198, 198)
                .addComponent(ViewBtn)
                .addGap(223, 223, 223)
                .addComponent(DeleteBtn)
                .addGap(132, 132, 132))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBtn))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewBtn)
                    .addComponent(DeleteBtn)
                    .addComponent(UpdateBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(EmployeeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(Age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(StartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(Team, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(imageDisplayLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(Contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(Photo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(Level, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(Position, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBtnActionPerformed
        // TODO add your handling code here:
        if((tableEmployee.getSelectionModel().isSelectionEmpty())){
           JOptionPane.showMessageDialog(this, "Please select a row");
           return;
        }
        int rowIndex = tableEmployee.getSelectedRow();
        if (rowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Select a row to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tableEmployee.getModel();
        EmployeeId.setText(model.getValueAt(rowIndex, 0).toString());
        Name.setText(model.getValueAt(rowIndex, 1).toString());
        Age.setText(model.getValueAt(rowIndex, 2).toString());
        Gender.setText(model.getValueAt(rowIndex, 3).toString());
        StartDate.setText(model.getValueAt(rowIndex, 4).toString());
        Level.setText(model.getValueAt(rowIndex, 5).toString());
        Team.setText(model.getValueAt(rowIndex, 6).toString());
        Position.setText(model.getValueAt(rowIndex, 7).toString());
        Contact.setText(model.getValueAt(rowIndex, 8).toString());
        Email.setText(model.getValueAt(rowIndex, 9).toString());
        Photo.setText(model.getValueAt(rowIndex, 10).toString());
        JOptionPane.showMessageDialog(this, model.getValueAt(rowIndex, 10).toString() );
        String path = model.getValueAt(rowIndex, 10).toString();
        ImageIcon img = new ImageIcon(new ImageIcon(path).getImage().getScaledInstance(imageDisplayLabel.getWidth(), imageDisplayLabel.getHeight(), Image.SCALE_SMOOTH));
        imageDisplayLabel.setIcon(img);
        
    }//GEN-LAST:event_ViewBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
        if((tableEmployee.getSelectionModel().isSelectionEmpty())){
           JOptionPane.showMessageDialog(this, "Please select a row");
           return;
        }
        int rowIndex = tableEmployee.getSelectedRow();
        if(rowIndex <0){
            JOptionPane.showMessageDialog(this, "Select a row to delete");
            return;
        }
        System.out.println(history.getLength());
        DefaultTableModel model = (DefaultTableModel)tableEmployee.getModel();
        history.deleteEmployee(rowIndex);
        populateHistory();
        hideData();
        imageDisplayLabel.setText("");
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        // TODO add your handling code here:
        if((tableEmployee.getSelectionModel().isSelectionEmpty())){
           JOptionPane.showMessageDialog(this, "Please select a row");
           return;
        }
        int rowIndex = tableEmployee.getSelectedRow();
        int id = 0, age=0, level=0;
        String name="", gender="", startdate="", team="", position="", photo="", email="";
        long contact=0;
        if (isValidId(EmployeeId.getText())) {
            id = Integer.parseInt(EmployeeId.getText());
        } else {
            JOptionPane.showMessageDialog(this, "Enter valid id");
        }
        if (isValidUsername(Name.getText())) {
            name = Name.getText();
        } else {
            JOptionPane.showMessageDialog(this, "Enter valid name");
        }
        if (onlyDigits(Age.getText(), Age.getText().length())) {
            if (isValidAge(Age.getText())) {
                age = Integer.parseInt(Age.getText());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Enter valid age");
        }
        gender = Gender.getText();
        startdate = StartDate.getText();
        if(isValidLevel(Level.getText())){   
            level = Integer.parseInt(Level.getText());
        }
        else{
            JOptionPane.showMessageDialog(this, "Enter valid level");
        }
        team = Team.getText();
        position = Position.getText();
        if(isValidContact(Contact.getText())){
            contact = Long.parseLong(Contact.getText());
        }
        else{
            JOptionPane.showMessageDialog(this, "Enter valid contact");
        }
        if(isEmailValid(Email.getText())){
            email = Email.getText();
        }
        else{
            JOptionPane.showMessageDialog(this, "Enter valid email");
        }
        photo = Photo.getText();
        history.updateData(rowIndex, id, name, age, gender, startdate, level, team, position, contact, email, photo);
        hideData();
        imageDisplayLabel.setText("");
        populateHistory();
    }//GEN-LAST:event_UpdateBtnActionPerformed

    //Validation functions
    public static boolean isValidUsername(String name) {
        String regex = "^[A-Za-z]\\w{5,29}$";
        Pattern p = Pattern.compile(regex);
        if (name == null) {
            return false;
        }
        Matcher m = p.matcher(name);
        return m.matches();
    }

    public boolean isValidId(String text) {
        int len = text.length();
        if (onlyDigits(text, len)) {
            String regex = "[0-9]{5}";
            Pattern p = Pattern.compile(regex);
            if (text == null) {
                return false;
            }
            Matcher m = p.matcher(text);
            return m.matches();
        }
        return true;
    }

    public static boolean onlyDigits(String str, int n) {
        for (int i = 0; i < n; i++) {
            if (!Character.isDigit(str.charAt(i))) {
                return false;
            }
        }
        return true;
    }

    public boolean isValidAge(String str) {
        String regex = "(100)|(0*\\d{1,2})";
        Pattern p = Pattern.compile(regex);
        if (Age.getText() == null) {
            return false;
        }
        Matcher m = p.matcher(str);
        return m.matches();
    }
    
    public boolean isValidContact(String str){
        String regex = "\\d{3}-\\d{3}-\\d{4}";
        Pattern p = Pattern.compile(regex);
        if (Contact.getText() == null) {
            return false;
        }
        Matcher m = p.matcher(str);
        return m.matches();
    }
    
    public boolean isValidLevel(String text) {
        String regex = "[1-9]|10";
        Pattern p = Pattern.compile(regex);
        if (Level.getText() == null) {
            return false;
        }
        Matcher m = p.matcher(text);
        return m.matches();
    }    
    
    public boolean isEmailValid(String str){
        String regex = "^(.+)@(.+)$";
        Pattern p = Pattern.compile(regex);
        if (Email.getText() == null) {
            return false;
        }
        Matcher m = p.matcher(str);
        return m.matches();
    }

    
    private void tableEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableEmployeeMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tableEmployeeMouseClicked

    private void SearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchFieldActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        String searchStr = SearchField.getText();
        Search(searchStr);
    }//GEN-LAST:event_SearchBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Age;
    private javax.swing.JTextField Contact;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField EmployeeId;
    private javax.swing.JTextField Gender;
    private javax.swing.JTextField Level;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField Photo;
    private javax.swing.JTextField Position;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField SearchField;
    private javax.swing.JTextField StartDate;
    private javax.swing.JTextField Team;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JButton ViewBtn;
    private javax.swing.JLabel imageDisplayLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableEmployee;
    // End of variables declaration//GEN-END:variables

    private void hideData() {
        EmployeeId.setText("");
        Name.setText("");
        Age.setText("");
        Gender.setText("");
        StartDate.setText("");
        Level.setText("");
        Team.setText("");
        Position.setText("");
        Contact.setText("");
        Email.setText("");
        Photo.setText("");
    }
    
    private void displayData(){
        int rowIndex = tableEmployee.getSelectedRow();
        if (rowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Select a row to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tableEmployee.getModel();
        EmployeeId.setText(model.getValueAt(rowIndex, 0).toString());
        Name.setText(model.getValueAt(rowIndex, 1).toString());
        Age.setText(model.getValueAt(rowIndex, 2).toString());
        Gender.setText(model.getValueAt(rowIndex, 3).toString());
        StartDate.setText(model.getValueAt(rowIndex, 4).toString());
        Level.setText(model.getValueAt(rowIndex, 5).toString());
        Team.setText(model.getValueAt(rowIndex, 6).toString());
        Position.setText(model.getValueAt(rowIndex, 7).toString());
        Contact.setText(model.getValueAt(rowIndex, 8).toString());
        Email.setText(model.getValueAt(rowIndex, 9).toString());
        Photo.setText(model.getValueAt(rowIndex, 10).toString());
    }

    public void Search(String str){
        DefaultTableModel model = (DefaultTableModel) tableEmployee.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        tableEmployee.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }
    
    private void populateHistory() {
        DefaultTableModel model = (DefaultTableModel) tableEmployee.getModel();
        model.setRowCount(0);
        
        for (Employee entry : history.getHistory()) {
            
            Object[] row = new Object[11];
            row[0] = entry.getId();
            row[1] = entry.getName();
            row[2] = entry.getAge();
            row[3] = entry.getGender();
            row[4] = entry.getDate();
            row[5] = entry.getLevel();
            row[6] = entry.getTeam();
            row[7] = entry.getPosition();
            row[8] = entry.getContact();
            row[9] = entry.getEmail();
            row[10] = entry.getPhoto();
            model.addRow(row);
        }
    }
}

